Template = ParameterSection, TaskSection, SolutionSection, PreAllocationSection, TestSection; (* Every order is valid as long as all of the listed sections are present *)


(* Parameter Section Definitions *)

ParameterSection = ParameterHeadline, NEWLINE, ParameterBody;
ParameterHeadline = "Parameter:";
ParameterBody = ParameterStatement, {NEWLINE, ParameterStatement};

ParameterStatement = EnumerationStatement | GenerationStatement | BlueprintStatement | BlueprintUsageStatement

EnumerationStatement = Identifier, "(", ValueList, ")", [WHITESPACE, Requires, WHITESPACE, Identifier, "(", ValueList, ")"];
ValueList = Values | ValuesWithComma;
Values = ANY_WO_COMMA {",", ANY_WO_COMMA};
ValuesWithComma = ValueWithComma, {";", ValueWithComma}; (* and with spaces *)
ValueWithComma = OPT_WS, "{", ANY, "}", OPT_WS;
Requires = "REQUIRES";

GenerationStatement = Identifier, "({", Mixed, "})"

BlueprintStatement = Identifier, "(", BlueprintArguments, ")"
BlueprintArguments = OPT_WS ,Property, OPT_WS, {",", OPT_WS, Property, OPT_WS}, {",", OPT_WS, Ellipse, OPT_WS};
Property = "@", CAP_WORD;
Ellipse = "...";

BlueprintUsageStatement = Identifier, "(", OPT_WS, Identifier, "(", ValueList, ")", OPT_WS, ")";


(* Parameter Usage Definitions *)

ParameterUsage = Identifier, {PropertyPart};
Identifier = "$", CAP_WORD;
PropertyPart = "->", CAP_WORD, {FunctionCallPart};
FunctionCallPart = "(", {Argument}, ")";
Argument = ANY_WO_COMMA;


(* Other Section Definitions *)

TaskSection = "Aufgabenstellung:", NEWLINE, Mixed, NEWLINE;
SolutionSection = "Lösung:", NEWLINE, Mixed, NEWLINE;
PreAllocationSection = "Vorbelegung:", NEWLINE, Mixed, NEWLINE;

Mixed = (Constant, {ParameterUsage, [Constant]})
    | (ParameterUsage, {Constant [ParameterUsage]}); (* Mixed content of Constants and ParameterUsage *)
Constant = ANY; (* nicht ganz korrekt, geschweifte Klammern möglich *)

TestSection = "Test:", NEWLINE, TestBody, NEWLINE;
TestBody = {TestCase};
TestCase = TestCode, TestOutcome;
TestCode = Mixed;
TestOutcome = NEWLINE, "Expected Outcome:", OPT_WS, ({CHAR | DIGIT | SPECIAL} | ParameterUsage), OPT_WS;


(* Character Definitions *)

WHITESPACE = ? any white space character ?;
NEWLINE = ? new line character ?;
CHAR = ? lowercase or uppercase word character ?;
DIGIT = ? any digit ?;
SPECIAL = ? any special character without ${} ?;
UPPERCHAR = ? uppercase word character ?;
ANY = CHAR | DIGIT | SPECIAL | WHITESPACE;
ANY_WO_COMMA = ? like ANY but without ,?;

WORD = CHAR, {CHAR};
OPT_WS = {WHITESPACE}; (* optional whitespace *)
WS_WORD = OPT_WS, WORD, OPT_WS;
CAP_WORD = UPPERCHAR, {UPPERCHAR};